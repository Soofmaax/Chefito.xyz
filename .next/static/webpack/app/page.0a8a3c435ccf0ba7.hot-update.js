"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useAuth.ts":
/*!******************************!*\
  !*** ./src/hooks/useAuth.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _middleware_adminAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/middleware/adminAuth */ \"(app-pages-browser)/./src/middleware/adminAuth.ts\");\n/* __next_internal_client_entry_do_not_use__ useAuth auto */ \n\n\nconst useAuth = ()=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [session, setSession] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Check if Supabase is configured\n        if (!(0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.isSupabaseConfigured)()) {\n            // Demo mode - simulate auth\n            console.log(\"\\uD83D\\uDD27 Running in demo mode - Supabase not configured\");\n            setLoading(false);\n            return;\n        }\n        console.log(\"\\uD83D\\uDD10 Supabase Auth configured - initializing...\");\n        // Get initial session\n        const getInitialSession = async ()=>{\n            try {\n                const { data: { session } } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.auth.getSession();\n                setSession(session);\n                if (session === null || session === void 0 ? void 0 : session.user) {\n                    await fetchUserProfile(session.user.id);\n                }\n            } catch (error) {\n                console.error(\"Error getting session:\", error);\n            } finally{\n                setLoading(false);\n            }\n        };\n        getInitialSession();\n        // Listen for auth changes\n        const { data: { subscription } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.auth.onAuthStateChange(async (event, session)=>{\n            console.log(\"\\uD83D\\uDD10 Auth state changed:\", event);\n            setSession(session);\n            if (session === null || session === void 0 ? void 0 : session.user) {\n                await fetchUserProfile(session.user.id);\n            } else {\n                setUser(null);\n            }\n            setLoading(false);\n        });\n        return ()=>subscription.unsubscribe();\n    }, []);\n    const fetchUserProfile = async (userId)=>{\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"profiles\").select(\"*\").eq(\"id\", userId).single();\n            if (error) {\n                console.error(\"Error fetching user profile:\", error);\n                return;\n            }\n            setUser(data);\n        } catch (error) {\n            console.error(\"Error fetching user profile:\", error);\n        }\n    };\n    const signUp = async (email, password, fullName)=>{\n        if (!(0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.isSupabaseConfigured)()) {\n            // Demo mode\n            console.log(\"\\uD83D\\uDD27 Demo mode: Simulating sign up\");\n            const mockUser = {\n                id: \"1\",\n                email,\n                full_name: fullName,\n                skill_level: \"beginner\",\n                dietary_restrictions: [],\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            };\n            setUser(mockUser);\n            return;\n        }\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        full_name: fullName\n                    }\n                }\n            });\n            if (error) throw error;\n            if (data.user) {\n                // Create profile\n                const { error: profileError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"profiles\").insert({\n                    id: data.user.id,\n                    email,\n                    full_name: fullName,\n                    skill_level: \"beginner\",\n                    dietary_restrictions: []\n                });\n                if (profileError) {\n                    console.error(\"Error creating profile:\", profileError);\n                }\n            }\n        } catch (error) {\n            console.error(\"Sign up error:\", error);\n            throw error;\n        }\n    };\n    const signIn = async (email, password)=>{\n        if (!(0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.isSupabaseConfigured)()) {\n            // Demo mode - handle admin login specially\n            console.log(\"\\uD83D\\uDD27 Demo mode: Simulating sign in\");\n            // Check if this is the admin login\n            if (email === _middleware_adminAuth__WEBPACK_IMPORTED_MODULE_2__.SUPER_ADMIN_EMAIL && password === _middleware_adminAuth__WEBPACK_IMPORTED_MODULE_2__.SUPER_ADMIN_PASSWORD) {\n                const adminUser = {\n                    id: \"admin-1\",\n                    email: _middleware_adminAuth__WEBPACK_IMPORTED_MODULE_2__.SUPER_ADMIN_EMAIL,\n                    full_name: \"Super Admin\",\n                    skill_level: \"advanced\",\n                    dietary_restrictions: [],\n                    created_at: new Date().toISOString(),\n                    updated_at: new Date().toISOString(),\n                    role: \"super_admin\",\n                    permissions: [\n                        \"recipes:read\",\n                        \"recipes:write\",\n                        \"recipes:delete\",\n                        \"users:read\",\n                        \"users:write\",\n                        \"users:delete\",\n                        \"admin:full_access\"\n                    ]\n                };\n                setUser(adminUser);\n                return adminUser;\n            }\n            // Regular user login\n            const mockUser = {\n                id: \"1\",\n                email,\n                full_name: \"Demo User\",\n                skill_level: \"beginner\",\n                dietary_restrictions: [],\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString(),\n                role: \"user\",\n                permissions: [\n                    \"profile:read\",\n                    \"profile:write\",\n                    \"recipes:read\"\n                ]\n            };\n            setUser(mockUser);\n            return mockUser;\n        }\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            if (error) throw error;\n            return data.user;\n        } catch (error) {\n            console.error(\"Sign in error:\", error);\n            throw error;\n        }\n    };\n    const signOut = async ()=>{\n        if (!(0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.isSupabaseConfigured)()) {\n            // Demo mode\n            console.log(\"\\uD83D\\uDD27 Demo mode: Simulating sign out\");\n            setUser(null);\n            return;\n        }\n        try {\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.auth.signOut();\n            if (error) throw error;\n            setUser(null);\n            setSession(null);\n        } catch (error) {\n            console.error(\"Sign out error:\", error);\n            throw error;\n        }\n    };\n    const updateProfile = async (updates)=>{\n        if (!(0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.isSupabaseConfigured)()) {\n            // Demo mode\n            if (user) {\n                setUser({\n                    ...user,\n                    ...updates\n                });\n            }\n            return;\n        }\n        try {\n            if (!user) throw new Error(\"No user logged in\");\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"profiles\").update({\n                ...updates,\n                updated_at: new Date().toISOString()\n            }).eq(\"id\", user.id);\n            if (error) throw error;\n            setUser({\n                ...user,\n                ...updates\n            });\n        } catch (error) {\n            console.error(\"Profile update error:\", error);\n            throw error;\n        }\n    };\n    return {\n        user,\n        session,\n        loading,\n        signIn,\n        signUp,\n        signOut,\n        updateProfile,\n        isSupabaseConfigured: (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_1__.isSupabaseConfigured)(),\n        isPostgreSQLMode: true\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useAuth.ts\n"));

/***/ })

});